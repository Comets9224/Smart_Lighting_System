C51 COMPILER V9.59.0.0   I2C                                                               10/26/2024 18:58:49 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\i2c.obj
COMPILER INVOKED BY: D:\CodeDesign\Keil5-C51\C51\BIN\C51.EXE i2c.c COMPACT OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\i2c.lst) TABS(2) OBJECT(.\Objects\i2c.obj)

line level    source

   1          #include "i2c.h"
   2          
   3          // I2C延时函数
   4          void I2C_Delay(void)
   5          {
   6   1          unsigned char i = 10;
   7   1          while (i--);
   8   1      }
   9          
  10          // 初始化I2C
  11          void I2C_Init(unsigned char bus)
  12          {
  13   1          switch(bus) {
  14   2              case 1: SCL1 = 1; SDA1 = 1; break;
  15   2              case 2: SCL2 = 1; SDA2 = 1; break;
  16   2              case 3: SCL3 = 1; SDA3 = 1; break;
  17   2              case 4: SCL4 = 1; SDA4 = 1; break;
  18   2          }
  19   1      }
  20          
  21          // 产生I2C起始信号
  22          void I2C_Start(unsigned char bus)
  23          {
  24   1          switch(bus) {
  25   2              case 1: SDA1 = 1; SCL1 = 1; I2C_Delay(); SDA1 = 0; I2C_Delay(); SCL1 = 0; break;
  26   2              case 2: SDA2 = 1; SCL2 = 1; I2C_Delay(); SDA2 = 0; I2C_Delay(); SCL2 = 0; break;
  27   2              case 3: SDA3 = 1; SCL3 = 1; I2C_Delay(); SDA3 = 0; I2C_Delay(); SCL3 = 0; break;
  28   2              case 4: SDA4 = 1; SCL4 = 1; I2C_Delay(); SDA4 = 0; I2C_Delay(); SCL4 = 0; break;
  29   2          }
  30   1      }
  31          
  32          // 产生I2C停止信号
  33          void I2C_Stop(unsigned char bus)
  34          {
  35   1          switch(bus) {
  36   2              case 1: SDA1 = 0; SCL1 = 1; I2C_Delay(); SDA1 = 1; I2C_Delay(); break;
  37   2              case 2: SDA2 = 0; SCL2 = 1; I2C_Delay(); SDA2 = 1; I2C_Delay(); break;
  38   2              case 3: SDA3 = 0; SCL3 = 1; I2C_Delay(); SDA3 = 1; I2C_Delay(); break;
  39   2              case 4: SDA4 = 0; SCL4 = 1; I2C_Delay(); SDA4 = 1; I2C_Delay(); break;
  40   2          }
  41   1      }
  42          
  43          // 发送应答信号
  44          void I2C_SendAck(unsigned char bus, bit ack)
  45          {
  46   1          switch(bus) {
  47   2              case 1: SDA1 = ack; SCL1 = 1; I2C_Delay(); SCL1 = 0; I2C_Delay(); break;
  48   2              case 2: SDA2 = ack; SCL2 = 1; I2C_Delay(); SCL2 = 0; I2C_Delay(); break;
  49   2              case 3: SDA3 = ack; SCL3 = 1; I2C_Delay(); SCL3 = 0; I2C_Delay(); break;
  50   2              case 4: SDA4 = ack; SCL4 = 1; I2C_Delay(); SCL4 = 0; I2C_Delay(); break;
  51   2          }
  52   1      }
  53          
  54          // 接收应答信号
C51 COMPILER V9.59.0.0   I2C                                                               10/26/2024 18:58:49 PAGE 2   

  55          bit I2C_RecvAck(unsigned char bus)
  56          {
  57   1          bit ack;
  58   1          switch(bus) {
  59   2              case 1: SDA1 = 1; I2C_Delay(); SCL1 = 1; I2C_Delay(); ack = SDA1; SCL1 = 0; I2C_Delay(); break;
  60   2              case 2: SDA2 = 1; I2C_Delay(); SCL2 = 1; I2C_Delay(); ack = SDA2; SCL2 = 0; I2C_Delay(); break;
  61   2              case 3: SDA3 = 1; I2C_Delay(); SCL3 = 1; I2C_Delay(); ack = SDA3; SCL3 = 0; I2C_Delay(); break;
  62   2              case 4: SDA4 = 1; I2C_Delay(); SCL4 = 1; I2C_Delay(); ack = SDA4; SCL4 = 0; I2C_Delay(); break;
  63   2          }
  64   1          return ack;
  65   1      }
  66          
  67          // 发送一个字节
  68          void I2C_SendByte(unsigned char bus, unsigned char dat)
  69          {
  70   1          unsigned char i;
  71   1          for (i = 0; i < 8; i++) {
  72   2              switch(bus) {
  73   3                  case 1: SDA1 = (dat & 0x80) ? 1 : 0; break;
  74   3                  case 2: SDA2 = (dat & 0x80) ? 1 : 0; break;
  75   3                  case 3: SDA3 = (dat & 0x80) ? 1 : 0; break;
  76   3                  case 4: SDA4 = (dat & 0x80) ? 1 : 0; break;
  77   3              }
  78   2              dat <<= 1;
  79   2              switch(bus) {
  80   3                  case 1: SCL1 = 1; I2C_Delay(); SCL1 = 0; I2C_Delay(); break;
  81   3                  case 2: SCL2 = 1; I2C_Delay(); SCL2 = 0; I2C_Delay(); break;
  82   3                  case 3: SCL3 = 1; I2C_Delay(); SCL3 = 0; I2C_Delay(); break;
  83   3                  case 4: SCL4 = 1; I2C_Delay(); SCL4 = 0; I2C_Delay(); break;
  84   3              }
  85   2          }
  86   1          I2C_RecvAck(bus);
  87   1      }
  88          
  89          // 接收一个字节
  90          unsigned char I2C_RecvByte(unsigned char bus)
  91          {
  92   1          unsigned char i, dat = 0;
  93   1          switch(bus) {
  94   2              case 1: SDA1 = 1; break;
  95   2              case 2: SDA2 = 1; break;
  96   2              case 3: SDA3 = 1; break;
  97   2              case 4: SDA4 = 1; break;
  98   2          }
  99   1          for (i = 0; i < 8; i++) {
 100   2              dat <<= 1;
 101   2              switch(bus) {
 102   3                  case 1: SCL1 = 1; I2C_Delay(); if (SDA1) dat |= 0x01; SCL1 = 0; I2C_Delay(); break;
 103   3                  case 2: SCL2 = 1; I2C_Delay(); if (SDA2) dat |= 0x01; SCL2 = 0; I2C_Delay(); break;
 104   3                  case 3: SCL3 = 1; I2C_Delay(); if (SDA3) dat |= 0x01; SCL3 = 0; I2C_Delay(); break;
 105   3                  case 4: SCL4 = 1; I2C_Delay(); if (SDA4) dat |= 0x01; SCL4 = 0; I2C_Delay(); break;
 106   3              }
 107   2          }
 108   1          return dat;
 109   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    615    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   I2C                                                               10/26/2024 18:58:49 PAGE 3   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
